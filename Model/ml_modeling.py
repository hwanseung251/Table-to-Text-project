# -*- coding: utf-8 -*-
"""ML_Modeling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Anbtz0IxUI1lpLk_X1dgZ8paC7aWlye

## Google Drive connect
"""

from google.colab import drive
drive.mount('/content/gdrive')

"""## Library install & load"""

!pip install autogluon

import pandas as pd
from autogluon.tabular import TabularPredictor
from sklearn.model_selection import train_test_split

"""## Data Loading"""

train = pd.read_csv("/content/gdrive/MyDrive/2024_컨퍼런스/data/bank-direct-marketing-campaigns.csv")
train.head()

train.shape

from sklearn.model_selection import train_test_split

val, test, y_train_val, y_test = train_test_split(train, train['y'], test_size=0.1, stratify=train['y'], random_state=42)
train, val, y_train, y_val = train_test_split(val, y_train_val, test_size=0.1/0.9, stratify=y_train_val, random_state=42)

"""## Modeling"""

# AutoGluon을 사용한 모델 학습
predictor = TabularPredictor(label='y', eval_metric = 'f1', sample_weight='balance_weight').fit(train, excluded_model_types=['NN_TORCH', 'FASTAI'])

from sklearn.metrics import f1_score, matthews_corrcoef, roc_auc_score,  accuracy_score

# 예측값 생성
y_pred = predictor.predict(val.drop(columns=['y'])).map({'yes':1,'no':0})
y_true = val['y'].map({'yes':1,'no':0})

# 평가 지표 계산
f1 = f1_score(y_true, y_pred)
mcc = matthews_corrcoef(y_true, y_pred)
roc_auc = roc_auc_score(y_true, predictor.predict_proba(val.drop(columns=['y'])).iloc[:,1])

# 결과 출력
print(f"F1 Score: {f1}")
print(f"MCC: {mcc}")
print(f"ROC AUC: {roc_auc}")

# 예측값 생성
y_pred = predictor.predict(test.drop(columns=['y'])).map({'yes':1,'no':0})
y_true = test['y'].map({'yes':1,'no':0})

# 평가 지표 계산
f1 = f1_score(y_true, y_pred)
mcc = matthews_corrcoef(y_true, y_pred)
roc_auc = roc_auc_score(y_true, predictor.predict_proba(test.drop(columns=['y'])).iloc[:,1])

# 결과 출력
print(f"F1 Score: {f1}")
print(f"MCC: {mcc}")
print(f"ROC AUC: {roc_auc}")

